---
# Create an issuer that will provide a CA, which we will use to issue a cert for the VPN server
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ include "openbalena.fullname" . }}-vpn-ca-issuer
spec:
  selfSigned: {}
---
# Create a Certificate Authority (CA) certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "openbalena.fullname" . }}-vpn-ca
  namespace: default
spec:
  isCA: true
  commonName: vpn-ca.{{ .Values.global.hostname }}
  secretName: {{ include "openbalena.fullname" . }}-vpn-root-secret
  privateKey:
    algorithm: RSA
  subject:
    countries:
      - "NO"
      - "DK"
    organizationalUnits:
      - Aivero
    streetAddresses:
      - Aivero Street 1
    provinces:
      - Aiveroverse
  dnsNames:
    - vpn-ca.{{ .Values.global.hostname }}
  issuerRef:
    name: {{ include "openbalena.fullname" . }}-vpn-ca-issuer
    kind: Issuer
    group: cert-manager.io
  usages:
    - server auth
    - digital signature
    - key encipherment
---
# Use the CA certificate for the actual certificate issuer
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ include "openbalena.fullname" . }}-vpn-cert-issuer
  namespace: default
spec:
  ca:
    secretName: {{ include "openbalena.fullname" . }}-vpn-root-secret

---

# Request a certificate for the VPN server
# We need the CA as well as a normal cert. Both will be in the produced secret
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "openbalena.fullname" . }}-vpn-cert
  namespace: {{ .Release.Namespace }}
spec:
  commonName: vpn.{{ .Values.global.hostname }}
  subject:
    countries:
      - "NO"
      - "DK"
    organizationalUnits:
      - Aivero
    streetAddresses:
      - Aivero Fjord 1
    provinces:
      - Aiveroverse
  secretName: {{ include "openbalena.fullname" . }}-vpn-cert
  issuerRef:
    name: {{ include "openbalena.fullname" . }}-vpn-cert-issuer
    kind: Issuer
  usages:
    - server auth
    - digital signature
    - key encipherment
---
