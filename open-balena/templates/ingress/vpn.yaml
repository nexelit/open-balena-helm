{{- if eq .Values.ingress.ingressClassName "openbalena-haproxy" }}
{{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
apiVersion: networking.k8s.io/v1
{{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1/Ingress" }}
apiVersion: networking.k8s.io/v1beta1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ include "openbalena.fullname" . }}-vpn
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openbalena.labels" . | nindent 4 }}
  annotations:
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    ingress.kubernetes.io/ssl-redirect: "false"
    ingress.kubernetes.io/ssl-passthrough: "true"
    ingress.kubernetes.io/server-alias: "vpn.{{ .Values.global.hostname }}"
    {{- with .Values.ingress.vpn.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  rules:
  - host: vpn.{{ .Values.global.hostname }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ include "openbalena.fullname" . }}-vpn
            port:
              number: 443
{{- else if eq .Values.ingress.ingressClassName "traefik" }}
# There is no TLS enabled here since the openvpn handles it itself
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRouteTCP
metadata:
  name: {{ include "openbalena.fullname" . }}-vpn
spec:
  entryPoints:                  
    - websecure
  routes:                       
  - match: HostSNI(`*`)
    services:                   
    - name: {{ include "openbalena.fullname" . }}-vpn                 
      port: 443
{{- end }}
